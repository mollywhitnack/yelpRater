"use strict";var app=angular.module("myApp",["ui.router","satellizer","ngFileUpload"]);app.config(["$authProvider",function(e){e.loginUrl="api/users/login",e.signupUrl="api/users/signup",e.facebook({clientId:"255060128209165",url:"/api/users/facebook"})}]),app.config(["$stateProvider","$urlRouterProvider",function(e,o){e.state("home",{url:"/",templateUrl:"/html/home.html"}).state("login",{url:"/login",templateUrl:"/html/login.html",controller:"loginCtrl"}).state("register",{url:"/register",templateUrl:"/html/register.html",controller:"registerCtrl"}).state("profile",{url:"/profile/:userId",templateUrl:"/html/profile.html",controller:"profileCtrl",resolve:{Profile:["User",function(e){return e.profile()}],ProfileByID:["User","$stateParams",function(e,o){return e.getProfile(o.userId)}]}}).state("users",{url:"/users",templateUrl:"/html/users.html",controller:"usersCtrl"}).state("business",{url:"/business",templateUrl:"/html/business.html",controller:"businessCtrl",resolve:{Profile:["User",function(e){return e.profile()}]}}).state("showBusiness",{url:"/business/:businessId",templateUrl:"html/showbusiness.html",controller:"showbusinessCtrl"}),o.otherwise("/")}]);var app=angular.module("myApp");app.controller("businessCtrl",["$scope","$rootScope","Business","Profile","User",function(e,o,t,n,r){console.log("businessCtrl"),e.businesses=[],e.searchBusiness=function(){console.log("$scope.newItem.searchParams",e.newItem.searchParams),t.searchYelp(e.newItem.searchParams).then(function(o){console.log("res:",o),e.businesses.push(o)})["catch"](function(e){console.log("err in businessCtrl: ",e)})},e.favorite=function(o){e.toggleFave=!e.toggleFave,console.log("$scope.businesses[index]:",e.businesses[o].id),t.addFavorite(e.businesses[o],n._id).then(function(t){console.log("res:",t),r.addFavoritetoUser(e.businesses[o],n._id)})["catch"](function(e){console.log("err in businessCtrl: ",e)})}}]);var app=angular.module("myApp");app.controller("imageCtrl",["$scope","Upload","Profile","$rootScope",function(e,o,t,n){console.log("image ctrl"),n.currentUser=t,e.submit=function(){console.log("submit"),console.log("$scope.file:",e.file),o.upload({url:"/api/images",data:{photo:e.file,user:n.currentUser._id}}).then(function(o){console.log("res: ",o),e.savedImage=o.data})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.controller("loginCtrl",["$scope","$state","$auth","$rootScope",function(e,o,t,n){console.log("loginCtrl!"),e.login=function(){t.login(e.user).then(function(e){console.log("res: ",e),o.go("profile")})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.controller("mainCtrl",["$scope","$state","$auth","$rootScope",function(e,o,t,n){console.log("mainCtrl!"),n.currentUser,e.isAuthenticated=function(){return t.isAuthenticated()},e.logout=function(){t.logout(),o.go("home")},e.authenticate=function(e){t.authenticate(e).then(function(e){o.go("home")})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.controller("profileCtrl",["$scope","Profile","ProfileByID","$state","User","$rootScope","WallPost",function(e,o,t,n,r,s,l){console.log("profileCtrl!"),s.currentUser=o,e.user=t||o,l.getWallPosts(e.user._id).then(function(o){e.userWallposts=o}),console.log("user:",e.user),console.log("curruser:",s.currentUser),e.showdisplayNameForm=function(){console.log("show form"),e.displayNameForm=!0},e.updatedisplayName=function(){e.displayNameForm=!1,e.user.displayName=e.newItem.displayName,r.updateProfile(e.user._id,e.newItem).then(function(o){console.log("profile:",o),e.newItem.displayName=""})["catch"](function(e){console.log("err:",e)})},e.canceldisplayName=function(){e.usernameForm=!0,e.newItem.displayName=""},e.showPictureForm=function(){console.log("show form"),e.photoForm=!0},e.updatePicture=function(){e.photoForm=!1,console.log("$state.current: ",n.current),e.user.profileImage=e.newItem.profileImage,console.log("$scope.newItem:",e.newItem),r.updateProfile(e.user._id,e.newItem).then(function(o){console.log("profile:",o),e.newItem.profileImage=""})["catch"](function(e){console.log("err:",e)})},e.cancelPhotoUrl=function(){e.photoForm=!0,e.newItem.photoUrl=""},e.deleteAccount=function(e){console.log(e._id),r.deleteAccount(e._id).then()["catch"](function(e){console.log("err: ",e)})},e.submitMessage=function(){var o={to:e.user,from:s.currentUser._id,fromName:s.currentUser.displayName,text:e.newItem.text,createdAt:"add moment"};console.log("post obj:",o),l.addWallPost(o).then(function(e){console.log("wallpost:",e),r.addWallPostToUser(t._id,e._id)}).then(n.go(n.$current,null,{reload:!0}))["catch"](function(e){console.log("err: ",e)})}}]);var app=angular.module("myApp");app.controller("registerCtrl",["$scope","$state","$auth",function(e,o,t){console.log("registerCtrl!"),e.register=function(){e.user.password!==e.user.password2?(e.user.password=null,e.user.password2=null,alert("Passwords must match!")):t.signup(e.user).then(function(e){console.log("res: ",e),o.go("login")})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.controller("showbusinessCtrl",["$scope","$stateParams","Business",function(e,o,t){console.log("showbusinessCtrl!");var n=o;console.log("businessId",n.businessId),t.searchYelp(n.businessId).then(function(o){console.log("res:",o),e.business=o})["catch"](function(e){console.log("err in businessCtrl: ",e)})}]);var app=angular.module("myApp");app.controller("usersCtrl",["$scope","$$state","$state","User",function(e,o,t,n){console.log("usersCtrl!");var r=n.getAll();console.log("userPromise:",r),r.then(function(o){console.log(o.data),e.userFeed=o.data})}]);var app=angular.module("myApp");app.service("Business",["$http","$q",function(e,o){this.searchYelp=function(t){return console.log("search: ",t),e.get("/api/businesses/yelp/"+t).then(function(e){return console.log("res.data in services:",e.data),console.log("res in services:",e),o.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.addFavorite=function(t,n){return console.log("businessObj:",t),e.post("/api/businesses/"+n,t).then(function(e){return console.log("res ln 24 business services:",e),o.resolve(e)})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.service("image",["$http","$q",function(e,o){this.getAll=function(){return e.get("/api/cruds")},this.getById=function(o){return e.get("/api/cruds/"+o)},this.addCrud=function(t){return e.post("/api/cruds",t).then(function(e){return o.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.deleteCrud=function(t){return e["delete"]("/api/cruds/"+t).then(function(){return o.resolve()})["catch"](function(e){console.log("err:",e)})},this.updateCrud=function(t,n){return e.put("/api/cruds/"+t,n).then(function(e){return o.resolve(n)})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.service("User",["$http","$q",function(e,o){this.profile=function(){return e.get("/api/users/profile").then(function(e){return o.resolve(e.data)})},this.getProfile=function(t){return e.get("/api/users/profile/"+t).then(function(e){return o.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.getAll=function(){return e.get("/api/users")},this.updateProfile=function(t,n){return console.log("here"),console.log(t," ",n),e.put("/api/users/profile/"+t,n).then(function(e){return o.resolve()})["catch"](function(e){console.log("err:",e)})},this.deleteAccount=function(t){return e["delete"]("/api/users/profile/"+t).then(function(e){return o.resolve()})["catch"](function(e){console.log("err:",e)})},this.addFavoriteToUser=function(t,n){return console.log("addFavoriteToUser","id:",t,"yelpId",n),e.put("/api/users/profile/"+t+"/"+n).then(function(e){return console.log("res ln 53:",e),o.resolve()})["catch"](function(e){console.log("err:",e)})}}]);var app=angular.module("myApp");app.service("WallPost",["$http","$q",function(e,o){this.addWallPost=function(t){return console.log("in add wallpost: ",t),e.post("/api/wallposts",t).then(function(e){return o.resolve(e.data)})["catch"](function(e){console.log("err:",e)})},this.getWallPosts=function(t){return e.get("/api/wallposts/"+t).then(function(e){return o.resolve(e.data)})["catch"](function(e){console.log("err: ",e)})}}]);
//# sourceMappingURL=data:application/json;base64,
